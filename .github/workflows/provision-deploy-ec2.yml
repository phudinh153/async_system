name: Provision and Deploy to EC2

on:
  workflow_dispatch:

jobs:
  provision-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-oidc
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy CloudFormation stack
        id: cfn
        run: |
          aws cloudformation deploy \
            --template-file cloudformation/ec2-template.yml \
            --stack-name my-ec2-stack \
            --capabilities CAPABILITY_NAMED_IAM
          # Get the public IP from stack outputs
          INSTANCE_IP=$(aws cloudformation describe-stacks --stack-name my-ec2-stack \
            --query "Stacks[0].Outputs[?OutputKey=='InstancePublicIp'].OutputValue" --output text)
          echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV

      - name: Wait for SSH to be available
        run: |
          for i in {1..30}; do
            if ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ${{ secrets.EC2_USER }}@${{ env.INSTANCE_IP }} 'echo ok'; then
              break
            fi
            sleep 10
          done

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.INSTANCE_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "."
          target: "/home/${{ secrets.EC2_USER }}/app"

      - name: Run deployment commands on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.INSTANCE_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/${{ secrets.EC2_USER }}/app
            python3 -m venv venv
            source venv/bin/activate
            uv venv install -r requirements.txt
            # alembic upgrade head  # Uncomment if you use Alembic
            nohup uvicorn src.main:app --host 0.0.0.0 --port 80 &