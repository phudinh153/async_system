name: Test
run-name: ${{ github.actor }} is running tests ðŸ§ª
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv venv .venv
          source .venv/bin/activate
          uv sync

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest src/tests/ \
            --verbose \
            --color=yes \
            --code-highlight=yes \
            --junitxml=pytest-results.xml \
            --cov=src \
            --cov-report=xml \
            --cov-report=term-missing

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always() # Run even if tests fail
        with:
          name: pytest-results
          path: |
            pytest-results.xml
            coverage.xml
          retention-days: 30
